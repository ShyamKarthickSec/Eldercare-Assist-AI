name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'

jobs:
  build-and-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./server
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔨 Generate Prisma Client
        run: npx prisma generate
      
      - name: 🏗️ Build TypeScript
        run: npm run build
      
      - name: 🗃️ Database setup (test)
        run: |
          npx prisma migrate deploy || echo "⚠️ No migrations to apply"
        env:
          DATABASE_URL: file:./test.db
      
      - name: 🧪 Run tests
        run: npm test --if-present
        continue-on-error: true
      
      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '18.x'
        with:
          name: backend-build
          path: server/dist/
          retention-days: 7
      
      - name: ✅ Build summary
        run: |
          echo "### ✅ Backend Build Successful! 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version**: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **TypeScript**: Compiled successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Prisma**: Client generated" >> $GITHUB_STEP_SUMMARY

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: false
          tags: eldercare-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: ✅ Docker build summary
        run: |
          echo "### ✅ Docker Build Successful! 🐳" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Image: \`eldercare-backend:test\`" >> $GITHUB_STEP_SUMMARY

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: 🔍 Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: 📝 Security summary
        run: |
          echo "### 🔒 Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check logs for any vulnerabilities." >> $GITHUB_STEP_SUMMARY

